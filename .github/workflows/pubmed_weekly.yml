name: Weekly PubMed Fetch and Email


on:
  schedule:
    - cron: '0 3 1 * *'  # First day of every month at 03:00 UTC
  workflow_dispatch:
    inputs:
      query:
        description: 'Custom PubMed query string (optional)'
        required: false
        default: ''

jobs:
  fetch-and-email:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests tqdm

      - name: Set query for last 90 days or use manual input
        id: set_query
        run: |
          if [ -n "${{ github.event.inputs.query }}" ]; then
            QUERY="${{ github.event.inputs.query }}"
          else
            DATE2=$(date +%Y/%m/%d)
            DATE1=$(date -d "$DATE2 - 90 days" +%Y/%m/%d)
            QUERY="\"memorial sloan kettering\"[affiliation] AND $DATE1:$DATE2[publication date]"
          fi
            echo "QUERY=$QUERY" >> $GITHUB_ENV
            echo "QUERY=$QUERY"


      - name: Run PubMed fetch script and capture STDOUT
        run: |
          python fetch_pubmed.py --query "$QUERY" --output results.tsv | tee pubmed_stdout.txt

      - name: Set email body from script STDOUT
        id: set_email_body
        run: |
          BODY=$(cat pubmed_stdout.txt)
          # Escape percent signs for YAML
          BODY_ESCAPED="${BODY//%/%%}"
          echo "EMAIL_BODY<<EOF" >> $GITHUB_ENV
          echo "$BODY_ESCAPED" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send results by email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Weekly PubMed Results"
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
          body: ${{ env.EMAIL_BODY }}
          attachments: results.tsv
          secure: true
